{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","cardsArray","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mNAeeA,G,MAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACC,sBAAKC,UAAU,0EAAf,UACC,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WACnD,gCACC,6BAAKL,IACL,4BAAIC,Y,4BCYMK,G,MAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAQ,cAAC,EAAD,CAEPT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAMP,OACC,8BACEH,MCEWI,EAdG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,qBAAKX,UAAU,MAAf,SACC,uBACAA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCKEI,G,MAXA,SAACC,GACf,OACC,qBAAKhB,UAAU,YAAYiB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAA5F,SACEJ,EAAMK,aCyCKC,E,kDAvCd,aAAe,IAAD,8BACb,gBAcDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAd1C,EAAKC,MAAQ,CACZzB,OAAQ,GACRsB,YAAa,IAJD,E,gEAQO,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACrB,OAAQ8B,S,+BAS7B,IAAD,EACwBC,KAAKN,MAA7BzB,EADA,EACAA,OAAQsB,EADR,EACQA,YACVU,EAAiBhC,EAAOiC,QAAO,SAAAC,GACrC,OAAOA,EAAMzC,KAAK0C,cAAcC,SAASd,EAAYa,kBAGrD,OACC,sBAAKvC,UAAU,KAAf,UACC,oBAAIA,UAAU,iBAAd,yBACA,cAAC,EAAD,CAAWW,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUnB,OAAQgC,a,GAhCLK,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACR,cAAC,EAAD,IACEC,SAASC,eAAe,SAK3BX,M","file":"static/js/main.ecda1c98.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn (\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw1 shadow-5 bb br b--dark-green\">\r\n\t\t\t<img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t\t<p>{email}</p>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\tconst cardsArray = robots.map((user, i) => {\r\n\t\treturn (<Card\r\n\t\t key={i} \r\n\t\t id={robots[i].id} \r\n\t\t name={robots[i].name} \r\n\t\t email={robots[i].email}/>)\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{cardsArray}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<input\r\n\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue\" \r\n\t\t\ttype=\"search\" \r\n\t\t\tplaceholder=\"Search robots\"\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default SearchBox;\t","import React from 'react';\r\nimport '../Containers/theScroll.css';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div className=\"theScroll\" style={{ overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\n// import { robots } from './robots';\r\nimport Scroll from '../Components/scroll';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchField: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => this.setState({robots: users})\r\n\t\t);\r\n}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchField: event.target.value })\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { robots, searchField } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t\t});\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"tc\">\r\n\t\t\t\t<h1 className=\"f1 light-green\">RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Card from './Components/Card';\r\nimport App from './Containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\nimport { robots } from './robots.js';\r\n\r\nReactDOM.render(\r\n\t<App />\r\n\t, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}