{"version":3,"sources":["components/Note.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Note","title","removeNote","useState","toggle","setToggle","content","setContent","className","onClick","xmlns","viewBox","fill","d","fillRule","clipRule","onChange","e","target","value","handleContentChange","type","placeholder","App","updateNotes","notes","filter","n","setNotes","noteTitle","setNoteTitle","name","push","map","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdf01f8f.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport './note.css';\r\n\r\nconst Note = ({title, removeNote}) => {\r\n  const handleContentChange = (e) => {\r\n    setContent(e.target.value);\r\n  }\r\n\r\n  const [toggle, setToggle] = useState(false);\r\n  const [content, setContent] = useState(\"Press the edit button above to edit or confirm your note\");\r\n  const placeholder = \"Enter your note's content here:\";\r\n\r\n  // If in edit mode, return textarea, else return paragraph (lines 36 & 62)\r\n  return (toggle) ? (\r\n    <div className=\"wrapper m-4 rounded-lg text-white border-4 border-red-300 border-opacity-80 bg-blue-700 shadow-2xl\">\r\n      <div className=\"text-2xl pb-12 text-center bg-green-700\">  \r\n        <div className=\"header flex justify-between\">\r\n\r\n          {/* Edit note button */}\r\n          <button onClick={() => setToggle(!toggle)} className=\"bg-green-700 transition-colors hover:bg-green-300 hover:text-gray-500 p-2 rounded\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\" />\r\n            </svg>\r\n          </button>\r\n\r\n          {/*Remove note button:*/}\r\n          <button onClick={() => removeNote(title)} className=\"bg-green-700 transition-colors hover:bg-green-300 hover:text-gray-500 p-2 rounded\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n          </button>\r\n        </div>\r\n          <h1>{title}</h1>\r\n      </div>\r\n\r\n      <div className=\"pt-4 content text-black\">\r\n        <textarea onChange={(e) => handleContentChange(e)} className=\"text-italic font-sans text-lg\" type=\"text\" placeholder={placeholder} />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"wrapper m-4 rounded-lg text-white border-4 border-red-300 border-opacity-80 bg-blue-700 shadow-2xl\">\r\n      <div className=\"text-2xl pb-12 text-center bg-green-700\">  \r\n        <div className=\"header flex justify-between\">\r\n\r\n          {/* Edit note button */}\r\n          <button onClick={() => setToggle(!toggle)} className=\"bg-green-700 transition-colors hover:bg-green-300 hover:text-gray-500 p-2 rounded\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\" />\r\n            </svg>\r\n          </button>\r\n\r\n          {/*Remove note button:*/}\r\n          <button onClick={() => removeNote(title)} className=\"bg-green-700 transition-colors hover:bg-green-300 hover:text-gray-500 p-2 rounded\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n          </button>\r\n        </div>\r\n          <h1>{title}</h1>\r\n      </div>\r\n\r\n      <div className=\"pt-4 content text-white\">\r\n        <p>{content}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Note;","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Note from './components/Note.jsx';\r\n\r\n\r\nfunction App() {\r\n  const removeNote = (title) => {\r\n    let updateNotes = [...notes];\r\n    updateNotes = updateNotes.filter((n) => n !== title);\r\n    setNotes(updateNotes);\r\n  };\r\n\r\n  \r\n  const [noteTitle, setNoteTitle] = useState(\"\");\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  const addNote = () => {\r\n    const updateNotes = [...notes];\r\n    updateNotes.push(noteTitle);\r\n    setNotes(updateNotes);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"main-wrapper\">\r\n\r\n      {/* input field */}\r\n      <div className=\"flex\">\r\n        <span className=\"text-md border border-2 rounded-l px-4 py-2 bg-gray-300 whitespace-no-wrap\">Title:</span>\r\n        <input onChange={(e) => setNoteTitle(e.target.value)} name=\"field_name\" className=\"border border-2 rounded-r px-4 py-2 w-full\" type=\"text\" placeholder=\"Write something here...\" />\r\n        <button onClick={addNote} className=\"bg-gray-400 transition-colors hover:bg-green-300 hover:text-gray-500 p-2 rounded\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path fillRule=\"evenodd\" d=\"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V8z\" clipRule=\"evenodd\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"flex flex-wrap\">\r\n        {notes.map((title, i) => {\r\n          return (\r\n            <Note key={i} title={title} removeNote={removeNote} />\r\n          )\r\n        })}\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}